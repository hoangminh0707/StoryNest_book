<?php

namespace App\Http\Controllers\Admin;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Categories;
use Illuminate\Support\Facades\DB;

class CategoryAdminController extends Controller
{
    public function index()
    {
        $categories = Categories::with('parent')->latest()->paginate(10);
        return view('admin.pages.categories.index', compact('categories'));
    }

    public function create()
    {
        $categories = Categories::whereNull('parent_id')->get(); // Chá»‰ láº¥y danh má»¥c cha
        return view('admin.pages.categories.create', compact('categories'));
    }

    public function store(Request $request)
    {
        $request->validate([
            'name' => 'required|unique:categories|max:255',
            'description' => 'nullable',
            'parent_id' => 'nullable|exists:categories,id'
        ]);

        Categories::create($request->all());
        return redirect()->route('admin.categories.index')->with('success', 'Danh má»¥c Ä‘Ã£ Ä‘Æ°á»£c thÃªm!');
    }

    public function edit(Categories $category)
    {
        // ðŸ”§ THÃŠM: Kiá»ƒm tra danh má»¥c cÃ³ Ä‘Æ°á»£c sáº£n pháº©m sá»­ dá»¥ng khÃ´ng
        if ($this->categoryHasProducts($category->id)) {
            return redirect()->route('admin.categories.index')
                ->with('error', 'KhÃ´ng thá»ƒ sá»­a danh má»¥c vÃ¬ Ä‘ang Ä‘Æ°á»£c sá»­ dá»¥ng bá»Ÿi sáº£n pháº©m.');
        }

        $categories = Categories::whereNull('parent_id')->where('id', '!=', $category->id)->get();
        return view('admin.pages.categories.edit', compact('category', 'categories'));
    }

    public function update(Request $request, Categories $category)
    {
        // ðŸ”§ THÃŠM: Kiá»ƒm tra danh má»¥c cÃ³ Ä‘Æ°á»£c sáº£n pháº©m sá»­ dá»¥ng khÃ´ng
        if ($this->categoryHasProducts($category->id)) {
            return redirect()->route('admin.categories.index')
                ->with('error', 'KhÃ´ng thá»ƒ cáº­p nháº­t danh má»¥c vÃ¬ Ä‘ang Ä‘Æ°á»£c sá»­ dá»¥ng bá»Ÿi sáº£n pháº©m.');
        }

        $request->validate([
            'name' => 'required|max:255|unique:categories,name,' . $category->id,
            'description' => 'nullable',
            'parent_id' => 'nullable|exists:categories,id'
        ]);

        $category->update($request->all());
        return redirect()->route('admin.categories.index')->with('success', 'Danh má»¥c Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t!');
    }

    public function destroy(Categories $category)
    {
        // ðŸ”§ Sá»¬A: Kiá»ƒm tra qua báº£ng category_product thay vÃ¬ products()
        if ($this->categoryHasProducts($category->id)) {
            return redirect()->route('admin.categories.index')
                ->with('error', 'KhÃ´ng thá»ƒ xÃ³a danh má»¥c vÃ¬ Ä‘ang Ä‘Æ°á»£c sá»­ dá»¥ng bá»Ÿi sáº£n pháº©m.');
        }

        // ðŸ”§ THÃŠM: Kiá»ƒm tra danh má»¥c con
        if ($this->categoryHasChildren($category->id)) {
            return redirect()->route('admin.categories.index')
                ->with('error', 'KhÃ´ng thá»ƒ xÃ³a danh má»¥c vÃ¬ cÃ²n danh má»¥c con.');
        }

        // Náº¿u khÃ´ng cÃ³ sáº£n pháº©m vÃ  danh má»¥c con â†’ xÃ³a
        $category->voucherConditions()->delete();
        $category->delete();

        return redirect()->route('admin.categories.index')
            ->with('success', 'Danh má»¥c Ä‘Ã£ Ä‘Æ°á»£c xÃ³a thÃ nh cÃ´ng!');
    }

    /**
     * ðŸ”§ THÃŠM: Helper method kiá»ƒm tra danh má»¥c cÃ³ sáº£n pháº©m khÃ´ng
     */
    private function categoryHasProducts(int $categoryId): bool
    {
        return DB::table('category_product')
            ->where('category_id', $categoryId)
            ->exists();
    }

    /**
     * ðŸ”§ THÃŠM: Helper method kiá»ƒm tra danh má»¥c cÃ³ danh má»¥c con khÃ´ng
     */
    private function categoryHasChildren(int $categoryId): bool
    {
        return Categories::where('parent_id', $categoryId)->exists();
    }

}